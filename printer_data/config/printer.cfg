[include shell_command.cfg]
# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[pause_resume]

[display_status]

[exclude_object]

[include macros.cfg]

[include pi4.cfg]

[include fluidd.cfg]

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: -5
position_min: -5
position_max: 268
homing_speed: 75

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.640
#hold_current: 0.636
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -3
position_min: -3
position_max: 228
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.640
#hold_current: 0.713
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree 
endstop_pin: probe:z_virtual_endstop
# endstop_pin: ^PC2
# position_endstop: 0.0
position_max: 250
position_min: -10
homing_speed: 35
second_homing_speed: 1
homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.500
#hold_current: 0.636
stealthchop_threshold: 999999

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 315
pressure_advance: 0.034

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.500
#hold_current: 0.500
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan controller_fan]
pin: PC6
heater: heater_bed
heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PB15

[mcu]
serial: /dev/ttyAMA0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_z_velocity: 10
max_z_accel: 1000

[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -49
y_offset: 0
#z_offset: 0.0
#position_endstop: 0.0
speed:200
sample_retract_dist=7
stow_on_each_sample = false #high speed for bltoch,
samples_result: average 
samples: 1 #the bl touch is bad, but it ain't that bad. One quick sample is plently unless you want to do 10 samples, 1 is fine. Standard diviation is far less than .0025 so you're all good G
#probe_with_touch_mode = true
pin_up_touch_mode_reports_triggered: False
pin_up_reports_not_triggered: False

[bed_mesh]
speed: 300
mesh_min: 5,15     #need to handle head distance with bl_touch
mesh_max: 219,225       #max probe range
probe_count: 5,5
horizontal_move_z: 5
split_delta_z: 0.05 #this is going to help fill in the blanks where your probe point doesnt touch.
#move_check_distance: 3.0 #this in conjunction with the line above
mesh_pps: 3,3
fade_start: 1
fade_end: 10
fade_target: 0
adaptive_margin: 5
algorithm: bicubic

[safe_z_home]
home_xy_position:166.5,117.5
speed: 300
z_hop: 10
z_hop_speed: 10

[bed_screws]
screw1: 24, 34
screw2: 194, 34
screw3: 194, 204
screw4: 24, 204

[screws_tilt_adjust]
screw1: 73, 34
screw1_name: front left screw 
screw2: 231, 34
screw2_name: front right screw
screw3: 231, 204
screw3_name: back right screw
screw4: 73, 204
screw4_name: back left screw
horizontal_move_z: 10
speed: 300
screw_thread: CW-M4

[virtual_sdcard]
path: /home/admin/printer_data/gcodes

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 37.4
shaper_type_y = ei
shaper_freq_y = 47.8

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: ^!PC15

[neopixel my_neopixel]
pin: PA8
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 100
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 5.0   ; the value to retract while PAUSE
variable_cancel_retract   : 10.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 10.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 0.0  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 200.0  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

######################################################################
#  BigTreeTech TFT TouchScreen emulated 12864 mode
######################################################################

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: PD8 # status led, Virtual MISO
spi_software_mosi_pin: PD6
spi_software_sclk_pin: PB9
en_pin: PB8
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[output_pin beeper]
pin: PB5

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.305
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.655
#*# pid_ki = 1.324
#*# pid_kd = 88.516
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.339
#*# pid_ki = 1.094
#*# pid_kd = 1196.312
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.487500, -0.520000, -0.545000, -0.597500
#*# 	-0.442500, -0.465000, -0.467500, -0.492500
#*# 	-0.482500, -0.482500, -0.472500, -0.477500
#*# 	-0.537500, -0.565000, -0.532500, -0.510000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 182.0
#*# min_y = 15.0
#*# max_y = 225.0
